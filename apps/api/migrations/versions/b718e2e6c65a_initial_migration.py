"""initial migration

Revision ID: b718e2e6c65a
Revises: 
Create Date: 2025-02-09 12:25:36.486027

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b718e2e6c65a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('OrganizationCategory',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_modified', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('SubscriptionPlan',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('features', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_modified', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Organization',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('abbreviation', sa.String(length=50), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('category', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_modified', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['category'], ['OrganizationCategory.id'], name='fk_organization_category'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('OrganizationSubscriptionPayment',
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('payment_amount', sa.Float(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_modified', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['Organization.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['SubscriptionPlan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('OrganizationSubscriptionSettings',
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('plan_id', sa.Integer(), nullable=False),
    sa.Column('activate_manually', sa.Boolean(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_modified', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['Organization.id'], ),
    sa.ForeignKeyConstraint(['plan_id'], ['SubscriptionPlan.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('User',
    sa.Column('full_name', sa.String(length=150), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('phone_number', sa.String(length=10), nullable=False),
    sa.Column('phone_number_ext', sa.String(length=5), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('pay_type', sa.Enum('HOURLY', 'MONTHLY', name='paytype'), nullable=False),
    sa.Column('payrate', sa.Float(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('is_owner', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_modified', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['Organization.id'], name='fk_user_organization'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('phone_number')
    )
    op.create_table('Payslip',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('period_start', sa.Date(), nullable=False),
    sa.Column('period_end', sa.Date(), nullable=False),
    sa.Column('total_hours', sa.Float(), nullable=False),
    sa.Column('overtime_hours', sa.Float(), nullable=False),
    sa.Column('base_salary', sa.Float(), nullable=False),
    sa.Column('overtime_pay', sa.Float(), nullable=False),
    sa.Column('deductions', sa.Float(), nullable=False),
    sa.Column('net_pay', sa.Float(), nullable=False),
    sa.Column('remarks', sa.String(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_modified', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['User.id'], name='fk_payslip_employee'),
    sa.ForeignKeyConstraint(['organization_id'], ['Organization.id'], name='fk_payslip_organization'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Shift',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('shift_start', sa.Time(), nullable=False),
    sa.Column('shift_end', sa.Time(), nullable=False),
    sa.Column('remarks', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_modified', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['User.id'], name='fk_shift_employee'),
    sa.ForeignKeyConstraint(['organization_id'], ['Organization.id'], name='fk_shift_organization'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('EmployeePunch',
    sa.Column('employee_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('punch_in_time', sa.Time(), nullable=False),
    sa.Column('punch_out_time', sa.Time(), nullable=True),
    sa.Column('shift_id', sa.Integer(), nullable=True),
    sa.Column('remarks', sa.String(length=255), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_modified', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['User.id'], name='fk_punchin_employee'),
    sa.ForeignKeyConstraint(['organization_id'], ['Organization.id'], name='fk_punchin_organization'),
    sa.ForeignKeyConstraint(['shift_id'], ['Shift.id'], name='fk_punchin_shift'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('EmployeePunch')
    op.drop_table('Shift')
    op.drop_table('Payslip')
    op.drop_table('User')
    op.drop_table('OrganizationSubscriptionSettings')
    op.drop_table('OrganizationSubscriptionPayment')
    op.drop_table('Organization')
    op.drop_table('SubscriptionPlan')
    op.drop_table('OrganizationCategory')
    # ### end Alembic commands ###
