"""add availability

Revision ID: 13892cce5888
Revises: f870c4c78439
Create Date: 2025-04-21 17:07:27.499527

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "13892cce5888"
down_revision: Union[str, None] = "f870c4c78439"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "Availability",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("monday_available", sa.Boolean(), nullable=False),
        sa.Column("monday_start", sa.Time(), nullable=True),
        sa.Column("monday_end", sa.Time(), nullable=True),
        sa.Column("tuesday_available", sa.Boolean(), nullable=False),
        sa.Column("tuesday_start", sa.Time(), nullable=True),
        sa.Column("tuesday_end", sa.Time(), nullable=True),
        sa.Column("wednesday_available", sa.Boolean(), nullable=False),
        sa.Column("wednesday_start", sa.Time(), nullable=True),
        sa.Column("wednesday_end", sa.Time(), nullable=True),
        sa.Column("thursday_available", sa.Boolean(), nullable=False),
        sa.Column("thursday_start", sa.Time(), nullable=True),
        sa.Column("thursday_end", sa.Time(), nullable=True),
        sa.Column("friday_available", sa.Boolean(), nullable=False),
        sa.Column("friday_start", sa.Time(), nullable=True),
        sa.Column("friday_end", sa.Time(), nullable=True),
        sa.Column("saturday_available", sa.Boolean(), nullable=False),
        sa.Column("saturday_start", sa.Time(), nullable=True),
        sa.Column("saturday_end", sa.Time(), nullable=True),
        sa.Column("sunday_available", sa.Boolean(), nullable=False),
        sa.Column("sunday_start", sa.Time(), nullable=True),
        sa.Column("sunday_end", sa.Time(), nullable=True),
        sa.Column("notes", sa.String(length=500), nullable=True),
        sa.Column("is_deleted", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "last_modified",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["User.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )


def downgrade() -> None:
    op.drop_table("Availability")
    # ### end Alembic commands ###
